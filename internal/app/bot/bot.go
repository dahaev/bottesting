package appbot

import (
	"fmt"
	"log"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
)

type Bot struct {
	bot     *tgbotapi.BotAPI
	service service
}

func New(token string) (*Bot, error) {
	bot, err := tgbotapi.NewBotAPI(token)
	if err != nil {
		log.Fatal("cannot start bot", err)
		return nil, err
	}
	return &Bot{
		bot:     bot,
		service: nil,
	}, nil
}

func (b *Bot) Start() {
	updateConfig := tgbotapi.NewUpdate(0)
	updateConfig.Timeout = 60
	updates, err := b.bot.GetUpdatesChan(updateConfig)
	if err != nil {
		fmt.Println(err)
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
	for update := range updates {
		if update.Message == nil {
			continue
		}

		log.Printf("[%s] %s", update.Message.From.UserName, update.Message.Text)

		//menu := b.CreateMenu()
		//msg := tgbotapi.NewMessage(update.Message.Chat.ID, "Hello")
		//msg.ReplyMarkup = menu
		//b.bot.Send(msg)

		photo := b.CreateMessage(update)
		btn1 := tgbotapi.NewInlineKeyboardButtonData("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "btn1")
		btn2 := tgbotapi.NewInlineKeyboardButtonData("–û—Ç–∑—ã–≤—ã", "btn2")
		row := tgbotapi.NewInlineKeyboardRow(btn1, btn2)
		keyboard := tgbotapi.NewInlineKeyboardMarkup(row)

		// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
		photo.ReplyMarkup = keyboard
		b.bot.Send(photo)

		// –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
		if update.Message.IsCommand() {
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –Ω–∞ Golang.")
			_, err = b.bot.Send(msg)
			if err != nil {
				fmt.Println(err)
			}
		}
	}
}

func (b *Bot) CreateMessage(update tgbotapi.Update) tgbotapi.PhotoConfig {
	photoUrl := "2.jpg"
	photo := tgbotapi.NewPhotoUpload(update.Message.Chat.ID, photoUrl)
	fmt.Println(photo)
	photo.Caption = b.CreateText()
	return photo
}

func (b *Bot) CreateText() string {
	name := "üá∑üá∫ Karolina"
	ordens := "üèÜ best blowjob"
	location := "–ú—ã—Ç–∏—â–∏"
	money := "üí∂ –æ—Ç 4500"
	time := "üïû –¥–æ 03"
	account := "üíå @karolina"

	oby := "üìã —Ç–∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ –ø–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –≤ —á—Ç–µ–Ω–∏–∏ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–∏ –æ–Ω–ª–∞–π–Ω. " +
		"–ó–∞–Ω—è—Ç–∏—è –ø–æ –ø–æ–Ω–∏–º–∞–Ω–∏—é –ø–∏—Å—å–º–µ–Ω–Ω–æ–≥–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ —Ä–∞—Å—à–∏—Ä—è—Ç –≤–∞—à —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å –∏ —É–ª—É—á—à–∞—Ç –ø–æ–Ω–∏–º–∞–Ω–∏–µ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏ –∏ –ø–æ—Ä—è–¥–∫–∞ —Å–ª–æ–≤." +
		" –¢–µ–∫—Å—Ç—ã –Ω–∏–∂–µ –ø—Ä–∏–∑–≤–∞–Ω—ã –ø–æ–º–æ—á—å –≤–∞–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –≤–∞–º –º–≥–Ω–æ–≤–µ–Ω–Ω—É—é –æ—Ü–µ–Ω–∫—É –≤–∞—à–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.\n"

	rating := "‚≠ê 7.6 (10)"
	sendMessage := fmt.Sprintf("%s\nüìç %s\n%s\n%s\n%s\n%s\n%s\n%s", name, location, oby, ordens, money, time, rating, account)

	return sendMessage
}

func (b *Bot) CreateMenu() *tgbotapi.ReplyKeyboardMarkup {
	btn1 := tgbotapi.NewKeyboardButton("Registration")
	btn2 := tgbotapi.NewKeyboardButton("SomeThingElse")
	btn3 := tgbotapi.NewKeyboardButton("Row2")
	btn4 := tgbotapi.NewKeyboardButton("Row3")
	row1 := tgbotapi.NewKeyboardButtonRow(btn1, btn2)
	row2 := tgbotapi.NewKeyboardButtonRow(btn3, btn4)
	keyboard := tgbotapi.NewReplyKeyboard(row1, row2)
	return &keyboard

}

type service interface {
}
